sincnet:
  cnn:
    cnn_N_filt: [80, 60, 60]
    cnn_len_filt: [251, 5, 5]
    cnn_max_pool_len: [3, 3, 3]
    cnn_use_laynorm_inp: True
    cnn_use_batchnorm_inp: False
    cnn_use_laynorm: [True, True, True]
    cnn_use_batchnorm: [False, False, False]
    cnn_act: ["leaky_relu", "leaky_relu", "leaky_relu"]
    cnn_drop: [0.0, 0.0, 0.0]
    fs: 16000
    convolution_window_len: 200
    convolution_window_shift: 10
    state_dict_path: "./models/speaker_classifcation/sincnet/cnn_state_dict.pth"

  dnn:
    # input_dim = CNN output dimension
    fc_lay: [2048, 2048, 2048]
    fc_drop: [0.0, 0.0, 0.0]
    fc_use_batchnorm: [True, True, True]
    fc_use_laynorm: [False, False, False]
    fc_use_laynorm_inp: True
    fc_use_batchnorm_inp: False
    fc_act: ["leaky_relu", "leaky_relu", "leaky_relu"]
    state_dict_path: "./models/speaker_classifcation/sincnet/dnn1_state_dict.pth"
  
  batch_dev: 128

speaker_counter:
  input_dim: 1030
  num_heads: 8
  num_classes: 10
  fc1_size: 512
  dropout_1: 0.5
  fc2_size: 128
  dropout_2: 0.3
  output_dim: 3

data:
  train_data_path: "./dataset/speaker_count/metadata.json"
  test_data_path: "./dataset/speaker_count/metadata.json"

n_epoch: 100
batch_size: 64
lr: 0.001
weight_decay: 0.0001
optimizer: adam